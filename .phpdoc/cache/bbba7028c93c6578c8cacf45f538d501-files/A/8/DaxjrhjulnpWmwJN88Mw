1700888057
bbba7028c93c6578c8cacf45f538d501-phpdoc%3A0abffb0169dbe54e2fbe445a3030fe93-8d42b54f91b8eb1f95bf094a5fbec414
s:21536:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"8d42b54f91b8eb1f95bf094a5fbec414";s:39:" phpDocumentor\Reflection\Php\File name";s:24:"cb-ajax-transactions.php";s:39:" phpDocumentor\Reflection\Php\File path";s:32:"cb-ajax/cb-ajax-transactions.php";s:41:" phpDocumentor\Reflection\Php\File source";s:8774:"<?php
// Exit if accessed directly
defined('ABSPATH') || exit;
/**
 * CB AJAX Get Transactions
 *
 * Gets transactions for a user based on the user_id passed in the $_GET array.
 *
 * @return JSON {
 * 		'text': JSON (JSON encoded array of transactions, or error message),
 * 		'type': string (success or error)
 * }
 *
 * @package AJAX
 * @since 2.3.0
 */
function cb_ajax_get_transactions() {

	if ( ! cb_is_get_request() ) {
		return;
	}

	$transactions = new CB_Transactions_Transaction();
	$feedback = ['type' => 'error', 'text' => ''];
	$get_args = [];

	if ( !empty($_GET['count'] ) ) {
		$get_args['select'] = 'COUNT(id) AS total_count';
	} else {
		$get_args = [
			'select' => ! empty( $_GET['select'] ) ? trim( $_GET['select'] ) : '*',
			'pagination' => [
				'page' => empty( $_GET['page'] ) ? 1 : intval($_GET['page']),
				'per_page' => empty( $_GET['per_page'] ) ? 10 : intval($_GET['per_page']),
			],
			'orderby' => ['column' => 'id','order' => 'DESC']
		];
	}

	if ( ! empty( $_GET['recipient_id'] ) ) {
		$get_args['where']['recipient_id'] = intval( $_GET['recipient_id'] );
	}

	if ( !empty( $_GET['sender_id'] ) ) {
		$get_args['where']['sender_id'] = intval( $_GET['sender_id'] );
	}

	if ( !empty( $_GET['event_id'] ) ) {
		$get_args['where']['event_id'] = intval( $_GET['event_id'] );
	}

	if ( !empty( $_GET['or'] ) ) {
		$get_args['where']['or'] = true;
	}

	$get = $transactions->get_transactions($get_args);

	if ( $get ) {
		$feedback['text'] = $get;
		$feedback['type'] = 'success';
	} else {
		$feedback['text'] = $get;
	}

	echo json_encode( $feedback );
	die();

}

/**
 * CB AJAX New Transactions
 *
 * AJAX handler for creating transactions.
 *
 * All parameters are passed via POST request.
 *
 * The following parameters are required:
 *
 * - sender_id (int) - The ID of the user sending the bits.
 * - recipient_id (int) - The ID of the user receiving the bits.
 * - amount (int) - The amount of bits to send.
 * - log_entry (string) - The log entry to record for this transaction.
 *
 * @package AJAX
 * @since 2.3.0
 */
function cb_ajax_new_transactions() {

	if ( ! cb_is_post_request() ) {
		return;
	}

	$feedback = ["text"	=> "", "type" => "error" ];

	if ( !isset( $_POST['api_key'] ) ) {
		$feedback['text'] = "Missing Confetti Bits API Key. Contact system administrator.";
		echo json_encode($feedback);
		die();
	}

	if ( !cb_core_validate_api_key( $_POST['api_key'] ) ) {
		$feedback['text'] = "Invalid Confetti Bits API key. Contact your system administrator to renew the API key.";
		echo json_encode($feedback);
		die();
	}

	if ( empty( $_POST['recipient_id'] ) ) {
		$feedback['text'] = "Failed to authenticate transaction. Missing recipient.";
		echo json_encode($feedback);
		die();
	}

	$recipient_id = intval($_POST['recipient_id']);

	if ( !empty( $_POST['event_id'] ) ) {

		$event_id = intval($_POST['event_id']);
		$event_transaction = cb_transactions_new_events_transaction([
			'event_id' => $event_id,
			'recipient_id' => $recipient_id
		]);

		if ( $event_transaction == false ) {
			$feedback['text'] = "Failed to process events transaction: {$event_transaction}";
		} else {
			$feedback['text'] = "You're all set, thanks for participating!";
			$feedback['type'] = 'success';

		}
		echo json_encode($feedback);
		die();
	}

	if ( !empty( $_POST['contest_id'] ) ) {

		$contest_id = intval($_POST['contest_id']);

		$contest_transction = cb_transactions_new_contests_transaction([
			'contest_id' => $contest_id,
			'recipient_id' => $recipient_id
		]);

		if ( $contest_transction == false ) {
			$feedback['text'] = "Failed to process contest transaction: {$contest_transaction}";
		} else {
			$feedback['text'] = "You're all set, congratulations!";
			$feedback['type'] = 'success';
		}
		echo json_encode($feedback);
		die();

	}

	if ( empty( $_POST['sender_id'] ) || empty( $_POST['amount'] ) ) {
		$feedback['text'] = "Failed to authenticate request. Missing sender ID or transaction amount.";
		echo json_encode($feedback);
		die();
	}

	if ( !is_numeric( $_POST['sender_id'] ) ) {
		$feedback["text"] = "Invalid or empty Sender ID. Please try again.";
		$feedback["type"] = "error";
		http_response_code(401);
		echo json_encode($feedback);
		die();
	} else {
		$sender_id = intval( $_POST['sender_id'] );
	}

	if ( empty( $_POST['recipient_id'] ) || !is_numeric( $_POST['recipient_id'] ) ) {
		$feedback["text"] = "Invalid or empty Recipient ID. Please select a recipient.";
		http_response_code(401);
		$feedback["type"] = "error";
		echo json_encode($feedback);
		die();
	} else {
		$recipient_id = intval( $_POST['recipient_id'] );
	}

	$sender_name = cb_core_get_user_display_name( $sender_id );
	$recipient_name = cb_core_get_user_display_name( $recipient_id );
	$log_entry = "";
	$amount = 0;
	$add_activity = isset( $_POST['add_activity'] );
	$is_admin = cb_core_admin_is_user_admin($sender_id);

	$total_today = cb_transactions_get_total_sent_today();

	if ( empty( $_POST['log_entry'] ) ) {
		$feedback["text"] = "Confetti Bits transactions must include a log entry.";
		$feedback["type"] = "error";
		echo json_encode($feedback);
		die();
	} else {
		$log_entry = sanitize_text_field( $_POST['log_entry'] );
	}

	if ( empty( $_POST['amount'] ) || !is_numeric( $_POST['amount'] ) ) {
		$feedback["text"] = "Confetti Bits transactions must include an amount to send.";
		http_response_code(400);
		$feedback["type"] = "error";
		echo json_encode($feedback);
		die();
	} else {
		$amount = intval( $_POST['amount'] );
	}

	if ( ( abs( $amount ) > cb_transactions_get_transfer_balance( $recipient_id ) ) &&
		( $amount < 0 )
	   ) {
		$feedback["text"] = "{$recipient_name} doesn't have enough Confetti Bits for that.";
		$feedback["type"] = "warning";
		echo json_encode($feedback);
		die();
	}

	if ( ( $amount + $total_today ) > 20 ) {
		$feedback["text"] = "Transaction not sent. This would put you over the 20 Confetti Bits per diem limit. Your counter will reset tomorrow!";
		$feedback["type"] = "warning";
		echo json_encode($feedback);
		die();
	}

	if ( ( $amount > cb_transactions_get_transfer_balance( $sender_id ) ) && ( !cb_is_user_admin($sender_id) ) ) {
		$feedback["text"] = "Sorry, it looks like you don't have enough bits to send.";
		$feedback["type"] = "warning";
		echo json_encode($feedback);
		die();
	}

	if ( (cb_core_get_doomsday_clock() <= 7 && !cb_is_user_admin($sender_id))
	   ) {
		$feedback["text"] = "Transaction not sent. Cannot transfer Confetti Bits within 7 days prior to, or one month beyond, the cycle reset date.";
		$feedback["type"] = "warning";
		echo json_encode($feedback);
		die();
	}

	$action = $is_admin ? "send" : "transfer";

	$send = cb_transactions_new_transaction([
		'item_id'			=> $recipient_id,
		'secondary_item_id'	=> $sender_id,
		'sender_id'			=> $sender_id,
		'recipient_id' 		=> $recipient_id,
		'date_sent'			=> cb_core_current_date(),
		'log_entry'    		=> "{$log_entry} - from {$sender_name}",
		'component_name'    => 'confetti_bits',
		'component_action'  => "cb_{$action}_bits",
		'amount'    		=> $amount
	]);

	if ( $add_activity ) {
		$sender_link = bp_core_get_userlink( $sender_id );
		$recipient_link = bp_core_get_userlink( $recipient_id );
		$activity_args = array(
			"action"	=> "<p>{$sender_link} just sent leadership bits to {$recipient_link} for:</p>",
			"content"	=> "<p style='margin:1.25rem;'>\"{$log_entry}\"</p>",
			"type"		=> "activity_update",
			"component"	=> "confetti_bits",
			"user_id"	=> $sender_id
		);
		bp_activity_add($activity_args);
	}

	if ( true === is_int( $send ) ) {

		if ( $is_admin ) {
			http_response_code(200);
			$feedback['text'] = "Successfully sent bits to {$recipient_name}!";
			$feedback['type'] = "success";
			echo json_encode($feedback);
			die();
		} else {
			$subtract = cb_transactions_new_transaction([
				'item_id'			=> $sender_id,
				'secondary_item_id'	=> $sender_id,
				'sender_id'			=> $sender_id,
				'recipient_id' 		=> $sender_id,
				'date_sent'			=> cb_core_current_date(),
				'log_entry'    		=> "Sent Bits to {$recipient_name}",
				'component_name'    => 'confetti_bits',
				'component_action'  => "cb_{$action}_bits",
				'amount'    		=> -$amount
			]);

			if ( true === is_int($subtract) ) {
				http_response_code(200);
				$feedback["text"] = "Successfully sent bits to {$recipient_name}";
				$feedback["type"] = "success";
				echo json_encode($feedback);
				die();
			} else {
				http_response_code(500);
				$feedback["text"] = "Something's broken, call Dustin.";
				$feedback["type"] = "error";
				echo json_encode($feedback);
				die();
			}
		}

	} else {
		http_response_code(500);
		$feedback["text"] = "Something's broken, call Dustin.";
		$feedback["type"] = "error";
		echo json_encode($feedback);
		die();
	}

}

";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:2:{s:27:"\cb_ajax_get_transactions()";O:38:"phpDocumentor\Reflection\Php\Function_":8:{s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\cb_ajax_get_transactions()";s:36:" phpDocumentor\Reflection\Fqsen name";s:24:"cb_ajax_get_transactions";}s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:0:{}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:24:"CB AJAX Get Transactions";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:76:"Gets transactions for a user based on the user_id passed in the $_GET array.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:110:"{
		'text': JSON (JSON encoded array of transactions, or error message),
		'type': string (success or error)
}";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:5:"\JSON";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"JSON";}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:4:"AJAX";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Since":3:{s:7:" * name";s:5:"since";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:53:" phpDocumentor\Reflection\DocBlock\Tags\Since version";s:5:"2.3.0";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:17;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:68;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}}s:27:"\cb_ajax_new_transactions()";O:38:"phpDocumentor\Reflection\Php\Function_":8:{s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\cb_ajax_new_transactions()";s:36:" phpDocumentor\Reflection\Fqsen name";s:24:"cb_ajax_new_transactions";}s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:0:{}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:24:"CB AJAX New Transactions";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:358:"AJAX handler for creating transactions.

All parameters are passed via POST request.

The following parameters are required:

- sender_id (int) - The ID of the user sending the bits.
- recipient_id (int) - The ID of the user receiving the bits.
- amount (int) - The amount of bits to send.
- log_entry (string) - The log entry to record for this transaction.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:4:"AJAX";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Since":3:{s:7:" * name";s:5:"since";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:53:" phpDocumentor\Reflection\DocBlock\Tags\Since version";s:5:"2.3.0";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:87;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:310;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";